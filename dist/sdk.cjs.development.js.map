{"version":3,"file":"sdk.cjs.development.js","sources":["../src/jsbi.ts","../src/numbers.ts","../src/constants.ts","../src/errors.ts","../src/utils.ts","../src/entities/currency.ts","../src/entities/token.ts","../src/entities/fractions/fraction.ts","../src/entities/fractions/currencyAmount.ts","../src/entities/fractions/tokenAmount.ts","../src/entities/fractions/price.ts","../src/entities/pair.ts","../src/entities/route.ts","../src/entities/fractions/percent.ts","../src/entities/trade.ts","../src/router.ts","../node_modules/regenerator-runtime/runtime.js","../src/fetcher.ts","../src/subgraphs.ts"],"sourcesContent":["/// <reference path=\"../node_modules/jsbi/jsbi.d.ts\"/>\n\n// @ts-nocheck\nimport JSBI from 'jsbi'\n\n// Export JSBI\nexport default JSBI","\nimport JSBI from 'jsbi'\n\nexport const MaxUint256 = JSBI.BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff')\n\n// exports for internal consumption\nexport const ZERO = JSBI.BigInt(0)\nexport const ONE = JSBI.BigInt(1)\nexport const TWO = JSBI.BigInt(2)\nexport const THREE = JSBI.BigInt(3)\nexport const FIVE = JSBI.BigInt(5)\nexport const TEN = JSBI.BigInt(10)\nexport const _100 = JSBI.BigInt(100)\nexport const _997 = JSBI.BigInt(997)\nexport const _1000 = JSBI.BigInt(1000)","import JSBI from 'jsbi'\n\nexport * from './numbers'\n// exports for external consumption\nexport type BigintIsh = JSBI | bigint | string\n\nexport enum ChainId {\n  RINKEBY = 4,\n  FUJI = 43113,\n  AVALANCHE = 43114\n}\n\nexport enum TradeType {\n  EXACT_INPUT,\n  EXACT_OUTPUT\n}\n\nexport enum Rounding {\n  ROUND_DOWN,\n  ROUND_HALF_UP,\n  ROUND_UP\n}\n\n/**\n * DEX SDK\n */\nexport const FACTORY_ADDRESS: { [chainId in ChainId]: string } = {\n  [ChainId.RINKEBY]: '0x86f83be9770894d8e46301b12E88e14AdC6cdb5F',\n  [ChainId.FUJI]: '0x7eeccb3028870540EEc3D88C2259506f2d34fEE0',\n  [ChainId.AVALANCHE]: '0x9Ad6C38BE94206cA50bb0d90783181662f0Cfa10'\n}\n\nexport const JOE_ADDRESS: { [chainId in ChainId]: string } = {\n  [ChainId.RINKEBY]: '0xce347E069B68C53A9ED5e7DA5952529cAF8ACCd4',\n  [ChainId.FUJI]: '0xcee9d937E3627E55F08240072D63f32c3a60fF2D',\n  [ChainId.AVALANCHE]: '0x6e84a6216eA6dACC71eE8E6b0a5B7322EEbC0fDd'\n}\n\nexport const MASTERCHEF_ADDRESS: { [chainId in ChainId]: string } = {\n  [ChainId.RINKEBY]: '0x1F51b7697A1919cF301845c93D4843FD620ad7Cc',\n  [ChainId.FUJI]: '0x2d388F47c3Ae5CC0C7F8ad73296B208cfaCd35ae',\n  [ChainId.AVALANCHE]: '0xd6a4F121CA35509aF06A0Be99093d08462f53052'\n}\n\nexport const MASTERCHEF_V3_ADDRESS: { [chainId in ChainId]: string } = {\n  [ChainId.RINKEBY]: '0xEedf119022F1Bb5F63676BbE855c82151B7198AF',\n  [ChainId.FUJI]: '0x0000000000000000000000000000000000000000',\n  [ChainId.AVALANCHE]: '0x188bED1968b795d5c9022F6a0bb5931Ac4c18F00'\n}\n\nexport const BAR_ADDRESS: { [chainId in ChainId]: string } = {\n  [ChainId.RINKEBY]: '0x33A86aFC0f728882F48E5105bc98758b3eAe2081',\n  [ChainId.FUJI]: '0x171B28d39De22EF001029117F3d241fF78c7DC5C',\n  [ChainId.AVALANCHE]: '0x57319d41F71E81F3c65F2a47CA4e001EbAFd4F33'\n}\n\nexport const ZAP_ADDRESS: { [chainId in ChainId]: string } = {\n  [ChainId.RINKEBY]: '0x70c949152D2AC84FbB809228606db4654773D994',\n  [ChainId.FUJI]: '0x5BBFA5f49EC557eABA9427Ac434F21b69113Fe20',\n  [ChainId.AVALANCHE]: '0x2C7B8e971c704371772eDaf16e0dB381A8D02027'\n}\n\nexport const ROUTER_ADDRESS: { [chainId in ChainId]: string } = {\n  [ChainId.RINKEBY]: '0x7E2528476b14507f003aE9D123334977F5Ad7B14',\n  [ChainId.FUJI]: '0x5db0735cf88F85E78ed742215090c465979B5006',\n  [ChainId.AVALANCHE]: '0x60aE616a2155Ee3d9A68541Ba4544862310933d4'\n}\n\nexport const MAKER_ADDRESS: { [chainId in ChainId]: string } = {\n  [ChainId.RINKEBY]: '0xbEFE1d0756Da706B3F0EbaEa7b4ae10D0AdF2f3F',\n  [ChainId.FUJI]: '0x0529719e33AA2f15c13b12be01D7E876454Caf02',\n  [ChainId.AVALANCHE]: '0x861726BFE27931A4E22a7277bDe6cb8432b65856'\n}\n\nexport const ROLL_ADDRESS: { [chainId in ChainId]: string } = {\n  [ChainId.RINKEBY]: '0xD6344FF98d12adD998cBcfaC16A215396e9bCb8c',\n  [ChainId.FUJI]: '0x41d5f5F66e4cEd197Ff273308A1c194E9E249f4F',\n  [ChainId.AVALANCHE]: '0xacFF0fBf56bAeb9Ef677DE19ADED8F7A950BCb58'\n}\n\nexport const BORINGHELPER_ADDRESS: { [chainId in ChainId]: string } = {\n  [ChainId.RINKEBY]: '0x73B35Bab1aFD869E3738464b3bE97999e80E8458',\n  [ChainId.FUJI]: '0xD28be693a573a26f50195213613EC893Ad5c4460',\n  [ChainId.AVALANCHE]: '0x1dd4D86180EEe39ac4fB35ECa67CACF608Ab5741'\n}\n\nexport const BORINGHELPER_MCV3_ADDRESS: { [chainId in ChainId]: string } = {\n  [ChainId.RINKEBY]: '0x11f89aE6DA4aB5D0C518A41F9424c5241A3D57A3',\n  [ChainId.FUJI]: '0x0000000000000000000000000000000000000000',\n  [ChainId.AVALANCHE]: '0xce63ECA0C8A2084C1BaEcE7737dB88f10c412c5E'\n}\n\nexport const BORINGTOKENSCANNER_ADDRESS: { [chainId in ChainId]: string } = {\n  [ChainId.RINKEBY]: '0xdd5C40b5f0f5Df9c8BF0aA4703d73867ea7f022D',\n  [ChainId.FUJI]: '0xD28be693a573a26f50195213613EC893Ad5c4460',\n  [ChainId.AVALANCHE]: '0x5cFcA5b2149A20A166508B28e5FCFA65c44c6B9c'\n}\n\nexport const BORINGDASHBOARD_ADDRESS: { [chainId in ChainId]: string } = {\n  [ChainId.RINKEBY]: '0xeC208ef9F8aEDbbF28722286E334a3939acEA646',\n  [ChainId.FUJI]: '0xD28be693a573a26f50195213613EC893Ad5c4460',\n  [ChainId.AVALANCHE]: '0x1Af353148F2316487b5311Fcd522c037842D232c'\n}\n\nexport const INIT_CODE_HASH = '0x0bbca9af0511ad1a1da383135cf3a8d2ac620e549ef9f6ae3a4c33c2fed0af91'\n\nexport const MINIMUM_LIQUIDITY = JSBI.BigInt(1000)\n\nexport enum SolidityType {\n  uint8 = 'uint8',\n  uint256 = 'uint256',\n}\n\nexport const SOLIDITY_TYPE_MAXIMA = {\n  [SolidityType.uint8]: JSBI.BigInt('0xff'),\n  [SolidityType.uint256]: JSBI.BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'),\n}\n// export const MaxUint256 = JSBI.BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff')\n\n\n/**\n * Lending SDK\n */\n\nexport const UNITROLLER_ADDRESS: { [chainId in ChainId]: string } = {\n  [ChainId.RINKEBY]: '0x5b0a2Fa14808E34C5518E19f0DBc39F61d080B11',\n  [ChainId.FUJI]: '0x0000000000000000000000000000000000000000',\n  [ChainId.AVALANCHE]: '0xdc13687554205E5b89Ac783db14bb5bba4A1eDaC'\n}\n\nexport const JOELENS_ADDRESS: { [chainId in ChainId]: string } = {\n  [ChainId.RINKEBY]: '0x4F101798dd4AF8A2A8325F4C54C195a61C59Dc62',\n  [ChainId.FUJI]: '0x0000000000000000000000000000000000000000',\n  [ChainId.AVALANCHE]: '0xFDF50FEa3527FaD31Fa840B748FD3694aE8a47cc'\n}\n\nexport const JOELENSVIEW_ADDRESS: { [chainId in ChainId]: string } = {\n  [ChainId.RINKEBY]: '0x51fBdc8FCa72CeF1E1b558DB0c502e874DB5602A',\n  [ChainId.FUJI]: '0x0000000000000000000000000000000000000000',\n  [ChainId.AVALANCHE]: '0x0000000000000000000000000000000000000000'\n}\n\nexport const FARMLENS_ADDRESS: { [chainId in ChainId]: string } = {\n  [ChainId.RINKEBY]: '0x7984D02320aA22e6A3cDAc3Af14E7f1820ac7aAa',\n  [ChainId.FUJI]: '0x0000000000000000000000000000000000000000',\n  [ChainId.AVALANCHE]: '0xc1b83cE1573984Dcf4115e983F9c28748a0F350E'\n}\n\nexport const JAVAX_ADDRESS: { [chainId in ChainId]: string } = {\n  [ChainId.RINKEBY]: '0x0444dcF838055493519F26021dE63Afa72EEe0D2',\n  [ChainId.FUJI]: '0x0000000000000000000000000000000000000000',\n  [ChainId.AVALANCHE]: '0xC22F01ddc8010Ee05574028528614634684EC29e'\n}\n\nexport const MAXIMILLION_ADDRESS: { [chainId in ChainId]: string } = {\n  [ChainId.RINKEBY]: '0xC48B0159d3e7F240ac76cc3Ce39dF62fCd4656b0',\n  [ChainId.FUJI]: '0x0000000000000000000000000000000000000000',\n  [ChainId.AVALANCHE]: '0xe5cDdAFd0f7Af3DEAf4bd213bBaee7A5927AB7E7'\n}\n\n","// see https://stackoverflow.com/a/41102306\nconst CAN_SET_PROTOTYPE = 'setPrototypeOf' in Object\n\n/**\n * Indicates that the pair has insufficient reserves for a desired output amount. I.e. the amount of output cannot be\n * obtained by sending any amount of input.\n */\nexport class InsufficientReservesError extends Error {\n  public readonly isInsufficientReservesError: true = true\n\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    if (CAN_SET_PROTOTYPE) Object.setPrototypeOf(this, new.target.prototype)\n  }\n}\n\n/**\n * Indicates that the input amount is too small to produce any amount of output. I.e. the amount of input sent is less\n * than the price of a single unit of output after fees.\n */\nexport class InsufficientInputAmountError extends Error {\n  public readonly isInsufficientInputAmountError: true = true\n\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    if (CAN_SET_PROTOTYPE) Object.setPrototypeOf(this, new.target.prototype)\n  }\n}\n","import invariant from 'tiny-invariant'\nimport warning from 'tiny-warning'\nimport JSBI from 'jsbi'\nimport { getAddress } from '@ethersproject/address'\n\nimport { BigintIsh, ZERO, ONE, TWO, THREE, SolidityType, SOLIDITY_TYPE_MAXIMA } from './constants'\n\nexport function validateSolidityTypeInstance(value: JSBI, solidityType: SolidityType): void {\n  invariant(JSBI.greaterThanOrEqual(value, ZERO), `${value} is not a ${solidityType}.`)\n  invariant(JSBI.lessThanOrEqual(value, SOLIDITY_TYPE_MAXIMA[solidityType]), `${value} is not a ${solidityType}.`)\n}\n\n// warns if addresses are not checksummed\nexport function validateAndParseAddress(address: string): string {\n  try {\n    const checksummedAddress = getAddress(address)\n    warning(address === checksummedAddress, `${address} is not checksummed.`)\n    return checksummedAddress\n  } catch (error) {\n    invariant(false, `${address} is not a valid address.`)\n  }\n}\n\nexport function parseBigintIsh(bigintIsh: BigintIsh): JSBI {\n  return bigintIsh instanceof JSBI\n    ? bigintIsh\n    : typeof bigintIsh === 'bigint'\n    ? JSBI.BigInt(bigintIsh.toString())\n    : JSBI.BigInt(bigintIsh)\n}\n\n// mock the on-chain sqrt function\nexport function sqrt(y: JSBI): JSBI {\n  validateSolidityTypeInstance(y, SolidityType.uint256)\n  let z: JSBI = ZERO\n  let x: JSBI\n  if (JSBI.greaterThan(y, THREE)) {\n    z = y\n    x = JSBI.add(JSBI.divide(y, TWO), ONE)\n    while (JSBI.lessThan(x, z)) {\n      z = x\n      x = JSBI.divide(JSBI.add(JSBI.divide(y, x), x), TWO)\n    }\n  } else if (JSBI.notEqual(y, ZERO)) {\n    z = ONE\n  }\n  return z\n}\n\n// given an array of items sorted by `comparator`, insert an item into its sort index and constrain the size to\n// `maxSize` by removing the last item\nexport function sortedInsert<T>(items: T[], add: T, maxSize: number, comparator: (a: T, b: T) => number): T | null {\n  invariant(maxSize > 0, 'MAX_SIZE_ZERO')\n  // this is an invariant because the interface cannot return multiple removed items if items.length exceeds maxSize\n  invariant(items.length <= maxSize, 'ITEMS_SIZE')\n\n  // short circuit first item add\n  if (items.length === 0) {\n    items.push(add)\n    return null\n  } else {\n    const isFull = items.length === maxSize\n    // short circuit if full and the additional item does not come before the last item\n    if (isFull && comparator(items[items.length - 1], add) <= 0) {\n      return add\n    }\n\n    let lo = 0,\n      hi = items.length\n\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1\n      if (comparator(items[mid], add) <= 0) {\n        lo = mid + 1\n      } else {\n        hi = mid\n      }\n    }\n    items.splice(lo, 0, add)\n    return isFull ? items.pop()! : null\n  }\n}\n","import JSBI from 'jsbi'\n\nimport { SolidityType } from '../constants'\nimport { validateSolidityTypeInstance } from '../utils'\n\n/**\n * A currency is any fungible financial instrument on Ethereum, including Ether and all ERC20 tokens.\n *\n * The only instance of the base class `Currency` is Ether.\n */\nexport class Currency {\n  public readonly decimals: number\n  public readonly symbol?: string\n  public readonly name?: string\n\n  /**\n   * The only instance of the base class `Currency`.\n   */\n  public static readonly CAVAX: Currency = new Currency(18, 'AVAX', 'Avalanche')\n\n  /**\n   * Constructs an instance of the base class `Currency`. The only instance of the base class `Currency` is `Currency.ETHER`.\n   * @param decimals decimals of the currency\n   * @param symbol symbol of the currency\n   * @param name of the currency\n   */\n  protected constructor(decimals: number, symbol?: string, name?: string) {\n    validateSolidityTypeInstance(JSBI.BigInt(decimals), SolidityType.uint8)\n\n    this.decimals = decimals\n    this.symbol = symbol\n    this.name = name\n  }\n}\n\nconst CAVAX = Currency.CAVAX\nexport { CAVAX }\n","import invariant from 'tiny-invariant'\nimport { ChainId } from '../constants'\nimport { validateAndParseAddress } from '../utils'\nimport { Currency } from './currency'\n\n/**\n * Represents an ERC20 token with a unique address and some metadata.\n */\nexport class Token extends Currency {\n  public readonly chainId: ChainId\n  public readonly address: string\n\n  public constructor(chainId: ChainId, address: string, decimals: number, symbol?: string, name?: string) {\n    super(decimals, symbol, name)\n    this.chainId = chainId\n    this.address = validateAndParseAddress(address)\n  }\n\n  /**\n   * Returns true if the two tokens are equivalent, i.e. have the same chainId and address.\n   * @param other other token to compare\n   */\n  public equals(other: Token): boolean {\n    // short circuit on reference equality\n    if (this === other) {\n      return true\n    }\n    return this.chainId === other.chainId && this.address === other.address\n  }\n\n  /**\n   * Returns true if the address of this token sorts before the address of the other token\n   * @param other other token to compare\n   * @throws if the tokens have the same address\n   * @throws if the tokens are on different chains\n   */\n  public sortsBefore(other: Token): boolean {\n    invariant(this.chainId === other.chainId, 'CHAIN_IDS')\n    invariant(this.address !== other.address, 'ADDRESSES')\n    return this.address.toLowerCase() < other.address.toLowerCase()\n  }\n}\n\n/**\n * Compares two currencies for equality\n */\nexport function currencyEquals(currencyA: Currency, currencyB: Currency): boolean {\n  if (currencyA instanceof Token && currencyB instanceof Token) {\n    return currencyA.equals(currencyB)\n  } else if (currencyA instanceof Token) {\n    return false\n  } else if (currencyB instanceof Token) {\n    return false\n  } else {\n    return currencyA === currencyB\n  }\n}\n\nexport const WAVAX = {\n  [ChainId.RINKEBY]: new Token(ChainId.RINKEBY, '0xc778417E063141139Fce010982780140Aa0cD5Ab', 18, 'WAVAX', 'Wrapped AVAX'), // This is actually WETH\n  [ChainId.FUJI]: new Token(ChainId.FUJI,'0xd00ae08403B9bbb9124bB305C09058E32C39A48c',18,'WAVAX','Wrapped AVAX'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE,'0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7',18,'WAVAX','Wrapped AVAX')\n}\n","import invariant from 'tiny-invariant'\nimport JSBI from 'jsbi'\nimport _Decimal from 'decimal.js-light'\nimport _Big, { RoundingMode } from 'big.js'\nimport toFormat from 'toformat'\n\nimport { BigintIsh, Rounding } from '../../constants'\nimport { ONE } from '../../constants'\nimport { parseBigintIsh } from '../../utils'\n\nconst Decimal = toFormat(_Decimal)\nconst Big = toFormat(_Big)\n\nconst toSignificantRounding = {\n  [Rounding.ROUND_DOWN]: Decimal.ROUND_DOWN,\n  [Rounding.ROUND_HALF_UP]: Decimal.ROUND_HALF_UP,\n  [Rounding.ROUND_UP]: Decimal.ROUND_UP\n}\n\nconst toFixedRounding = {\n  [Rounding.ROUND_DOWN]: RoundingMode.RoundDown,\n  [Rounding.ROUND_HALF_UP]: RoundingMode.RoundHalfUp,\n  [Rounding.ROUND_UP]: RoundingMode.RoundUp\n}\n\nexport class Fraction {\n  public readonly numerator: JSBI\n  public readonly denominator: JSBI\n\n  public constructor(numerator: BigintIsh, denominator: BigintIsh = ONE) {\n    this.numerator = parseBigintIsh(numerator)\n    this.denominator = parseBigintIsh(denominator)\n  }\n\n  // performs floor division\n  public get quotient(): JSBI {\n    return JSBI.divide(this.numerator, this.denominator)\n  }\n\n  // remainder after floor division\n  public get remainder(): Fraction {\n    return new Fraction(JSBI.remainder(this.numerator, this.denominator), this.denominator)\n  }\n\n  public invert(): Fraction {\n    return new Fraction(this.denominator, this.numerator)\n  }\n\n  public add(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigintIsh(other))\n    if (JSBI.equal(this.denominator, otherParsed.denominator)) {\n      return new Fraction(JSBI.add(this.numerator, otherParsed.numerator), this.denominator)\n    }\n    return new Fraction(\n      JSBI.add(\n        JSBI.multiply(this.numerator, otherParsed.denominator),\n        JSBI.multiply(otherParsed.numerator, this.denominator)\n      ),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    )\n  }\n\n  public subtract(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigintIsh(other))\n    if (JSBI.equal(this.denominator, otherParsed.denominator)) {\n      return new Fraction(JSBI.subtract(this.numerator, otherParsed.numerator), this.denominator)\n    }\n    return new Fraction(\n      JSBI.subtract(\n        JSBI.multiply(this.numerator, otherParsed.denominator),\n        JSBI.multiply(otherParsed.numerator, this.denominator)\n      ),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    )\n  }\n\n  public lessThan(other: Fraction | BigintIsh): boolean {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigintIsh(other))\n    return JSBI.lessThan(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    )\n  }\n\n  public equalTo(other: Fraction | BigintIsh): boolean {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigintIsh(other))\n    return JSBI.equal(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    )\n  }\n\n  public greaterThan(other: Fraction | BigintIsh): boolean {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigintIsh(other))\n    return JSBI.greaterThan(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    )\n  }\n\n  public multiply(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigintIsh(other))\n    return new Fraction(\n      JSBI.multiply(this.numerator, otherParsed.numerator),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    )\n  }\n\n  public divide(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigintIsh(other))\n    return new Fraction(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(this.denominator, otherParsed.numerator)\n    )\n  }\n\n  public toSignificant(\n    significantDigits: number,\n    format: object = { groupSeparator: '' },\n    rounding: Rounding = Rounding.ROUND_HALF_UP\n  ): string {\n    invariant(Number.isInteger(significantDigits), `${significantDigits} is not an integer.`)\n    invariant(significantDigits > 0, `${significantDigits} is not positive.`)\n\n    Decimal.set({ precision: significantDigits + 1, rounding: toSignificantRounding[rounding] })\n    const quotient = new Decimal(this.numerator.toString())\n      .div(this.denominator.toString())\n      .toSignificantDigits(significantDigits)\n    return quotient.toFormat(quotient.decimalPlaces(), format)\n  }\n\n  public toFixed(\n    decimalPlaces: number,\n    format: object = { groupSeparator: '' },\n    rounding: Rounding = Rounding.ROUND_HALF_UP\n  ): string {\n    invariant(Number.isInteger(decimalPlaces), `${decimalPlaces} is not an integer.`)\n    invariant(decimalPlaces >= 0, `${decimalPlaces} is negative.`)\n\n    Big.DP = decimalPlaces\n    Big.RM = toFixedRounding[rounding]\n    return new Big(this.numerator.toString()).div(this.denominator.toString()).toFormat(decimalPlaces, format)\n  }\n}\n","import { currencyEquals } from '../token'\nimport { Currency, CAVAX } from '../currency'\nimport invariant from 'tiny-invariant'\nimport JSBI from 'jsbi'\nimport _Big from 'big.js'\nimport toFormat from 'toformat'\n\nimport { BigintIsh, Rounding, TEN, SolidityType } from '../../constants'\nimport { parseBigintIsh, validateSolidityTypeInstance } from '../../utils'\nimport { Fraction } from './fraction'\n\nconst Big = toFormat(_Big)\n\nexport class CurrencyAmount extends Fraction {\n  public readonly currency: Currency\n\n  /**\n   * Helper that calls the constructor with the ETHER currency\n   * @param amount ether amount in wei\n   */\n  public static ether(amount: BigintIsh): CurrencyAmount {\n    return new CurrencyAmount(CAVAX, amount)\n  }\n\n  // amount _must_ be raw, i.e. in the native representation\n  protected constructor(currency: Currency, amount: BigintIsh) {\n    const parsedAmount = parseBigintIsh(amount)\n    validateSolidityTypeInstance(parsedAmount, SolidityType.uint256)\n\n    super(parsedAmount, JSBI.exponentiate(TEN, JSBI.BigInt(currency.decimals)))\n    this.currency = currency\n  }\n\n  public get raw(): JSBI {\n    return this.numerator\n  }\n\n  public add(other: CurrencyAmount): CurrencyAmount {\n    invariant(currencyEquals(this.currency, other.currency), 'TOKEN')\n    return new CurrencyAmount(this.currency, JSBI.add(this.raw, other.raw))\n  }\n\n  public subtract(other: CurrencyAmount): CurrencyAmount {\n    invariant(currencyEquals(this.currency, other.currency), 'TOKEN')\n    return new CurrencyAmount(this.currency, JSBI.subtract(this.raw, other.raw))\n  }\n\n  public toSignificant(\n    significantDigits: number = 6,\n    format?: object,\n    rounding: Rounding = Rounding.ROUND_DOWN\n  ): string {\n    return super.toSignificant(significantDigits, format, rounding)\n  }\n\n  public toFixed(\n    decimalPlaces: number = this.currency.decimals,\n    format?: object,\n    rounding: Rounding = Rounding.ROUND_DOWN\n  ): string {\n    invariant(decimalPlaces <= this.currency.decimals, 'DECIMALS')\n    return super.toFixed(decimalPlaces, format, rounding)\n  }\n\n  public toExact(format: object = { groupSeparator: '' }): string {\n    Big.DP = this.currency.decimals\n    return new Big(this.numerator.toString()).div(this.denominator.toString()).toFormat(format)\n  }\n}\n","import { CurrencyAmount } from './currencyAmount'\nimport { Token } from '../token'\nimport invariant from 'tiny-invariant'\nimport JSBI from 'jsbi'\n\nimport { BigintIsh } from '../../constants'\n\nexport class TokenAmount extends CurrencyAmount {\n  public readonly token: Token\n\n  // amount _must_ be raw, i.e. in the native representation\n  public constructor(token: Token, amount: BigintIsh) {\n    super(token, amount)\n    this.token = token\n  }\n\n  public add(other: TokenAmount): TokenAmount {\n    invariant(this.token.equals(other.token), 'TOKEN')\n    return new TokenAmount(this.token, JSBI.add(this.raw, other.raw))\n  }\n\n  public subtract(other: TokenAmount): TokenAmount {\n    invariant(this.token.equals(other.token), 'TOKEN')\n    return new TokenAmount(this.token, JSBI.subtract(this.raw, other.raw))\n  }\n}\n","import { Token } from '../token'\nimport { TokenAmount } from './tokenAmount'\nimport { currencyEquals } from '../token'\nimport invariant from 'tiny-invariant'\nimport JSBI from 'jsbi'\n\nimport { BigintIsh, Rounding, TEN } from '../../constants'\nimport { Currency } from '../currency'\nimport { Route } from '../route'\nimport { Fraction } from './fraction'\nimport { CurrencyAmount } from './currencyAmount'\n\nexport class Price extends Fraction {\n  public readonly baseCurrency: Currency // input i.e. denominator\n  public readonly quoteCurrency: Currency // output i.e. numerator\n  public readonly scalar: Fraction // used to adjust the raw fraction w/r/t the decimals of the {base,quote}Token\n\n  public static fromRoute(route: Route): Price {\n    const prices: Price[] = []\n    for (const [i, pair] of route.pairs.entries()) {\n      prices.push(\n        route.path[i].equals(pair.token0)\n          ? new Price(pair.reserve0.currency, pair.reserve1.currency, pair.reserve0.raw, pair.reserve1.raw)\n          : new Price(pair.reserve1.currency, pair.reserve0.currency, pair.reserve1.raw, pair.reserve0.raw)\n      )\n    }\n    return prices.slice(1).reduce((accumulator, currentValue) => accumulator.multiply(currentValue), prices[0])\n  }\n\n  // denominator and numerator _must_ be raw, i.e. in the native representation\n  public constructor(baseCurrency: Currency, quoteCurrency: Currency, denominator: BigintIsh, numerator: BigintIsh) {\n    super(numerator, denominator)\n\n    this.baseCurrency = baseCurrency\n    this.quoteCurrency = quoteCurrency\n    this.scalar = new Fraction(\n      JSBI.exponentiate(TEN, JSBI.BigInt(baseCurrency.decimals)),\n      JSBI.exponentiate(TEN, JSBI.BigInt(quoteCurrency.decimals))\n    )\n  }\n\n  public get raw(): Fraction {\n    return new Fraction(this.numerator, this.denominator)\n  }\n\n  public get adjusted(): Fraction {\n    return super.multiply(this.scalar)\n  }\n\n  public invert(): Price {\n    return new Price(this.quoteCurrency, this.baseCurrency, this.numerator, this.denominator)\n  }\n\n  public multiply(other: Price): Price {\n    invariant(currencyEquals(this.quoteCurrency, other.baseCurrency), 'TOKEN')\n    const fraction = super.multiply(other)\n    return new Price(this.baseCurrency, other.quoteCurrency, fraction.denominator, fraction.numerator)\n  }\n\n  // performs floor division on overflow\n  public quote(currencyAmount: CurrencyAmount): CurrencyAmount {\n    invariant(currencyEquals(currencyAmount.currency, this.baseCurrency), 'TOKEN')\n    if (this.quoteCurrency instanceof Token) {\n      return new TokenAmount(this.quoteCurrency, super.multiply(currencyAmount.raw).quotient)\n    }\n    return CurrencyAmount.ether(super.multiply(currencyAmount.raw).quotient)\n  }\n\n  public toSignificant(significantDigits: number = 6, format?: object, rounding?: Rounding): string {\n    return this.adjusted.toSignificant(significantDigits, format, rounding)\n  }\n\n  public toFixed(decimalPlaces: number = 4, format?: object, rounding?: Rounding): string {\n    return this.adjusted.toFixed(decimalPlaces, format, rounding)\n  }\n}\n","import { Price } from './fractions/price'\nimport { TokenAmount } from './fractions/tokenAmount'\nimport invariant from 'tiny-invariant'\nimport JSBI from 'jsbi'\nimport { pack, keccak256 } from '@ethersproject/solidity'\nimport { getCreate2Address } from '@ethersproject/address'\n\nimport {\n  BigintIsh,\n  FACTORY_ADDRESS,\n  INIT_CODE_HASH,\n  MINIMUM_LIQUIDITY,\n  ChainId\n} from '../constants'\nimport {   \n  ZERO,\n  ONE,\n  FIVE,\n  _997,\n  _1000 } from '../numbers'\nimport { sqrt, parseBigintIsh } from '../utils'\nimport { InsufficientReservesError, InsufficientInputAmountError } from '../errors'\nimport { Token } from './token'\n\nlet PAIR_ADDRESS_CACHE: { [token0Address: string]: { [token1Address: string]: string } } = {}\n\nexport class Pair {\n  public readonly liquidityToken: Token\n  private readonly tokenAmounts: [TokenAmount, TokenAmount]\n\n  public static getAddress(tokenA: Token, tokenB: Token, chainId: ChainId): string {\n    const tokens = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA] // does safety checks\n\n    if (PAIR_ADDRESS_CACHE?.[tokens[0].address]?.[tokens[1].address] === undefined) {\n      PAIR_ADDRESS_CACHE = {\n        ...PAIR_ADDRESS_CACHE,\n        [tokens[0].address]: {\n          ...PAIR_ADDRESS_CACHE?.[tokens[0].address],\n          [tokens[1].address]: getCreate2Address(\n            FACTORY_ADDRESS[chainId],\n            keccak256(['bytes'], [pack(['address', 'address'], [tokens[0].address, tokens[1].address])]),\n            INIT_CODE_HASH\n          )\n        }\n      }\n    }\n\n    return PAIR_ADDRESS_CACHE[tokens[0].address][tokens[1].address]\n  }\n\n  public constructor(tokenAmountA: TokenAmount, tokenAmountB: TokenAmount, chainId: ChainId) {\n    const tokenAmounts = tokenAmountA.token.sortsBefore(tokenAmountB.token) // does safety checks\n      ? [tokenAmountA, tokenAmountB]\n      : [tokenAmountB, tokenAmountA]\n    this.liquidityToken = new Token(\n      tokenAmounts[0].token.chainId,\n      Pair.getAddress(tokenAmounts[0].token, tokenAmounts[1].token, chainId),\n      18,\n      'JLP',\n      'Joe Liquidity'\n    )\n    this.tokenAmounts = tokenAmounts as [TokenAmount, TokenAmount]\n  }\n\n  /**\n   * Returns true if the token is either token0 or token1\n   * @param token to check\n   */\n  public involvesToken(token: Token): boolean {\n    return token.equals(this.token0) || token.equals(this.token1)\n  }\n\n  /**\n   * Returns the current mid price of the pair in terms of token0, i.e. the ratio of reserve1 to reserve0\n   */\n  public get token0Price(): Price {\n    return new Price(this.token0, this.token1, this.tokenAmounts[0].raw, this.tokenAmounts[1].raw)\n  }\n\n  /**\n   * Returns the current mid price of the pair in terms of token1, i.e. the ratio of reserve0 to reserve1\n   */\n  public get token1Price(): Price {\n    return new Price(this.token1, this.token0, this.tokenAmounts[1].raw, this.tokenAmounts[0].raw)\n  }\n\n  /**\n   * Return the price of the given token in terms of the other token in the pair.\n   * @param token token to return price of\n   */\n  public priceOf(token: Token): Price {\n    invariant(this.involvesToken(token), 'TOKEN')\n    return token.equals(this.token0) ? this.token0Price : this.token1Price\n  }\n\n  /**\n   * Returns the chain ID of the tokens in the pair.\n   */\n  public get chainId(): ChainId {\n    return this.token0.chainId\n  }\n\n  public get token0(): Token {\n    return this.tokenAmounts[0].token\n  }\n\n  public get token1(): Token {\n    return this.tokenAmounts[1].token\n  }\n\n  public get reserve0(): TokenAmount {\n    return this.tokenAmounts[0]\n  }\n\n  public get reserve1(): TokenAmount {\n    return this.tokenAmounts[1]\n  }\n\n  public reserveOf(token: Token): TokenAmount {\n    invariant(this.involvesToken(token), 'TOKEN')\n    return token.equals(this.token0) ? this.reserve0 : this.reserve1\n  }\n\n  public getOutputAmount(inputAmount: TokenAmount, chainId: ChainId): [TokenAmount, Pair] {\n    invariant(this.involvesToken(inputAmount.token), 'TOKEN')\n    if (JSBI.equal(this.reserve0.raw, ZERO) || JSBI.equal(this.reserve1.raw, ZERO)) {\n      throw new InsufficientReservesError()\n    }\n    const inputReserve = this.reserveOf(inputAmount.token)\n    const outputReserve = this.reserveOf(inputAmount.token.equals(this.token0) ? this.token1 : this.token0)\n    const inputAmountWithFee = JSBI.multiply(inputAmount.raw, _997)\n    const numerator = JSBI.multiply(inputAmountWithFee, outputReserve.raw)\n    const denominator = JSBI.add(JSBI.multiply(inputReserve.raw, _1000), inputAmountWithFee)\n    const outputAmount = new TokenAmount(\n      inputAmount.token.equals(this.token0) ? this.token1 : this.token0,\n      JSBI.divide(numerator, denominator)\n    )\n    if (JSBI.equal(outputAmount.raw, ZERO)) {\n      throw new InsufficientInputAmountError()\n    }\n    return [outputAmount, new Pair(inputReserve.add(inputAmount), outputReserve.subtract(outputAmount), chainId)]\n  }\n\n  public getInputAmount(outputAmount: TokenAmount, chainId: ChainId): [TokenAmount, Pair] {\n    invariant(this.involvesToken(outputAmount.token), 'TOKEN')\n    if (\n      JSBI.equal(this.reserve0.raw, ZERO) ||\n      JSBI.equal(this.reserve1.raw, ZERO) ||\n      JSBI.greaterThanOrEqual(outputAmount.raw, this.reserveOf(outputAmount.token).raw)\n    ) {\n      throw new InsufficientReservesError()\n    }\n\n    const outputReserve = this.reserveOf(outputAmount.token)\n    const inputReserve = this.reserveOf(outputAmount.token.equals(this.token0) ? this.token1 : this.token0)\n    const numerator = JSBI.multiply(JSBI.multiply(inputReserve.raw, outputAmount.raw), _1000)\n    const denominator = JSBI.multiply(JSBI.subtract(outputReserve.raw, outputAmount.raw), _997)\n    const inputAmount = new TokenAmount(\n      outputAmount.token.equals(this.token0) ? this.token1 : this.token0,\n      JSBI.add(JSBI.divide(numerator, denominator), ONE)\n    )\n    return [inputAmount, new Pair(inputReserve.add(inputAmount), outputReserve.subtract(outputAmount), chainId)]\n  }\n\n  public getLiquidityMinted(\n    totalSupply: TokenAmount,\n    tokenAmountA: TokenAmount,\n    tokenAmountB: TokenAmount\n  ): TokenAmount {\n    invariant(totalSupply.token.equals(this.liquidityToken), 'LIQUIDITY')\n    const tokenAmounts = tokenAmountA.token.sortsBefore(tokenAmountB.token) // does safety checks\n      ? [tokenAmountA, tokenAmountB]\n      : [tokenAmountB, tokenAmountA]\n    invariant(tokenAmounts[0].token.equals(this.token0) && tokenAmounts[1].token.equals(this.token1), 'TOKEN')\n\n    let liquidity: JSBI\n    if (JSBI.equal(totalSupply.raw, ZERO)) {\n      liquidity = JSBI.subtract(sqrt(JSBI.multiply(tokenAmounts[0].raw, tokenAmounts[1].raw)), MINIMUM_LIQUIDITY)\n    } else {\n      const amount0 = JSBI.divide(JSBI.multiply(tokenAmounts[0].raw, totalSupply.raw), this.reserve0.raw)\n      const amount1 = JSBI.divide(JSBI.multiply(tokenAmounts[1].raw, totalSupply.raw), this.reserve1.raw)\n      liquidity = JSBI.lessThanOrEqual(amount0, amount1) ? amount0 : amount1\n    }\n    if (!JSBI.greaterThan(liquidity, ZERO)) {\n      throw new InsufficientInputAmountError()\n    }\n    return new TokenAmount(this.liquidityToken, liquidity)\n  }\n\n  public getLiquidityValue(\n    token: Token,\n    totalSupply: TokenAmount,\n    liquidity: TokenAmount,\n    feeOn: boolean = false,\n    kLast?: BigintIsh\n  ): TokenAmount {\n    invariant(this.involvesToken(token), 'TOKEN')\n    invariant(totalSupply.token.equals(this.liquidityToken), 'TOTAL_SUPPLY')\n    invariant(liquidity.token.equals(this.liquidityToken), 'LIQUIDITY')\n    invariant(JSBI.lessThanOrEqual(liquidity.raw, totalSupply.raw), 'LIQUIDITY')\n\n    let totalSupplyAdjusted: TokenAmount\n    if (!feeOn) {\n      totalSupplyAdjusted = totalSupply\n    } else {\n      invariant(!!kLast, 'K_LAST')\n      const kLastParsed = parseBigintIsh(kLast)\n      if (!JSBI.equal(kLastParsed, ZERO)) {\n        const rootK = sqrt(JSBI.multiply(this.reserve0.raw, this.reserve1.raw))\n        const rootKLast = sqrt(kLastParsed)\n        if (JSBI.greaterThan(rootK, rootKLast)) {\n          const numerator = JSBI.multiply(totalSupply.raw, JSBI.subtract(rootK, rootKLast))\n          const denominator = JSBI.add(JSBI.multiply(rootK, FIVE), rootKLast)\n          const feeLiquidity = JSBI.divide(numerator, denominator)\n          totalSupplyAdjusted = totalSupply.add(new TokenAmount(this.liquidityToken, feeLiquidity))\n        } else {\n          totalSupplyAdjusted = totalSupply\n        }\n      } else {\n        totalSupplyAdjusted = totalSupply\n      }\n    }\n\n    return new TokenAmount(\n      token,\n      JSBI.divide(JSBI.multiply(liquidity.raw, this.reserveOf(token).raw), totalSupplyAdjusted.raw)\n    )\n  }\n}\n","import { ChainId } from '../constants'\nimport invariant from 'tiny-invariant'\n\nimport { Currency, CAVAX } from './currency'\nimport { Token, WAVAX } from './token'\nimport { Pair } from './pair'\nimport { Price } from './fractions/price'\n\nexport class Route {\n  public readonly pairs: Pair[]\n  public readonly path: Token[]\n  public readonly input: Currency\n  public readonly output: Currency\n  public readonly midPrice: Price\n\n  public constructor(pairs: Pair[], input: Currency, output?: Currency) {\n    invariant(pairs.length > 0, 'PAIRS')\n    invariant(\n      pairs.every(pair => pair.chainId === pairs[0].chainId),\n      'CHAIN_IDS'\n    )\n    invariant(\n      (input instanceof Token && pairs[0].involvesToken(input)) ||\n        (input === CAVAX && pairs[0].involvesToken(WAVAX[pairs[0].chainId])),\n      'INPUT'\n    )\n    invariant(\n      typeof output === 'undefined' ||\n        (output instanceof Token && pairs[pairs.length - 1].involvesToken(output)) ||\n        (output === CAVAX && pairs[pairs.length - 1].involvesToken(WAVAX[pairs[0].chainId])),\n      'OUTPUT'\n    )\n\n    const path: Token[] = [input instanceof Token ? input : WAVAX[pairs[0].chainId]]\n    for (const [i, pair] of pairs.entries()) {\n      const currentInput = path[i]\n      invariant(currentInput.equals(pair.token0) || currentInput.equals(pair.token1), 'PATH')\n      const output = currentInput.equals(pair.token0) ? pair.token1 : pair.token0\n      path.push(output)\n    }\n\n    this.pairs = pairs\n    this.path = path\n    this.midPrice = Price.fromRoute(this)\n    this.input = input\n    this.output = output ?? path[path.length - 1]\n  }\n\n  public get chainId(): ChainId {\n    return this.pairs[0].chainId\n  }\n}\n","import { Rounding, _100 } from '../../constants'\nimport { Fraction } from './fraction'\n\nconst _100_PERCENT = new Fraction(_100)\n\nexport class Percent extends Fraction {\n  public toSignificant(significantDigits: number = 5, format?: object, rounding?: Rounding): string {\n    return this.multiply(_100_PERCENT).toSignificant(significantDigits, format, rounding)\n  }\n\n  public toFixed(decimalPlaces: number = 2, format?: object, rounding?: Rounding): string {\n    return this.multiply(_100_PERCENT).toFixed(decimalPlaces, format, rounding)\n  }\n}\n","import invariant from 'tiny-invariant'\n\nimport { ChainId, ONE, TradeType, ZERO } from '../constants'\nimport { sortedInsert } from '../utils'\nimport { Currency, CAVAX } from './currency'\nimport { CurrencyAmount } from './fractions/currencyAmount'\nimport { Fraction } from './fractions/fraction'\nimport { Percent } from './fractions/percent'\nimport { Price } from './fractions/price'\nimport { TokenAmount } from './fractions/tokenAmount'\nimport { Pair } from './pair'\nimport { Route } from './route'\nimport { currencyEquals, Token, WAVAX } from './token'\n\n/**\n * Returns the percent difference between the mid price and the execution price, i.e. price impact.\n * @param midPrice mid price before the trade\n * @param inputAmount the input amount of the trade\n * @param outputAmount the output amount of the trade\n */\nfunction computePriceImpact(midPrice: Price, inputAmount: CurrencyAmount, outputAmount: CurrencyAmount): Percent {\n  const exactQuote = midPrice.raw.multiply(inputAmount.raw)\n  // calculate slippage := (exactQuote - outputAmount) / exactQuote\n  const slippage = exactQuote.subtract(outputAmount.raw).divide(exactQuote)\n  return new Percent(slippage.numerator, slippage.denominator)\n}\n\n// minimal interface so the input output comparator may be shared across types\ninterface InputOutput {\n  readonly inputAmount: CurrencyAmount\n  readonly outputAmount: CurrencyAmount\n}\n\n// comparator function that allows sorting trades by their output amounts, in decreasing order, and then input amounts\n// in increasing order. i.e. the best trades have the most outputs for the least inputs and are sorted first\nexport function inputOutputComparator(a: InputOutput, b: InputOutput): number {\n  // must have same input and output token for comparison\n  invariant(currencyEquals(a.inputAmount.currency, b.inputAmount.currency), 'INPUT_CURRENCY')\n  invariant(currencyEquals(a.outputAmount.currency, b.outputAmount.currency), 'OUTPUT_CURRENCY')\n  if (a.outputAmount.equalTo(b.outputAmount)) {\n    if (a.inputAmount.equalTo(b.inputAmount)) {\n      return 0\n    }\n    // trade A requires less input than trade B, so A should come first\n    if (a.inputAmount.lessThan(b.inputAmount)) {\n      return -1\n    } else {\n      return 1\n    }\n  } else {\n    // tradeA has less output than trade B, so should come second\n    if (a.outputAmount.lessThan(b.outputAmount)) {\n      return 1\n    } else {\n      return -1\n    }\n  }\n}\n\n// extension of the input output comparator that also considers other dimensions of the trade in ranking them\nexport function tradeComparator(a: Trade, b: Trade) {\n  const ioComp = inputOutputComparator(a, b)\n  if (ioComp !== 0) {\n    return ioComp\n  }\n\n  // consider lowest slippage next, since these are less likely to fail\n  if (a.priceImpact.lessThan(b.priceImpact)) {\n    return -1\n  } else if (a.priceImpact.greaterThan(b.priceImpact)) {\n    return 1\n  }\n\n  // finally consider the number of hops since each hop costs gas\n  return a.route.path.length - b.route.path.length\n}\n\nexport interface BestTradeOptions {\n  // how many results to return\n  maxNumResults?: number\n  // the maximum number of hops a trade should contain\n  maxHops?: number\n}\n\n/**\n * Given a currency amount and a chain ID, returns the equivalent representation as the token amount.\n * In other words, if the currency is ETHER, returns the WETH token amount for the given chain. Otherwise, returns\n * the input currency amount.\n */\nfunction wrappedAmount(currencyAmount: CurrencyAmount, chainId: ChainId): TokenAmount {\n  if (currencyAmount instanceof TokenAmount) return currencyAmount\n  if (currencyAmount.currency === CAVAX) return new TokenAmount(WAVAX[chainId], currencyAmount.raw)\n  invariant(false, 'CURRENCY')\n}\n\nfunction wrappedCurrency(currency: Currency, chainId: ChainId): Token {\n  if (currency instanceof Token) return currency\n  if (currency === CAVAX) return WAVAX[chainId]\n  invariant(false, 'CURRENCY')\n}\n\n/**\n * Represents a trade executed against a list of pairs.\n * Does not account for slippage, i.e. trades that front run this trade and move the price.\n */\nexport class Trade {\n  /**\n   * The route of the trade, i.e. which pairs the trade goes through.\n   */\n  public readonly route: Route\n  /**\n   * The type of the trade, either exact in or exact out.\n   */\n  public readonly tradeType: TradeType\n  /**\n   * The input amount for the trade assuming no slippage.\n   */\n  public readonly inputAmount: CurrencyAmount\n  /**\n   * The output amount for the trade assuming no slippage.\n   */\n  public readonly outputAmount: CurrencyAmount\n  /**\n   * The price expressed in terms of output amount/input amount.\n   */\n  public readonly executionPrice: Price\n  /**\n   * The mid price after the trade executes assuming no slippage.\n   */\n  public readonly nextMidPrice: Price\n  /**\n   * The percent difference between the mid price before the trade and the trade execution price.\n   */\n  public readonly priceImpact: Percent\n\n  public readonly chainId: ChainId\n\n  /**\n   * Constructs an exact in trade with the given amount in and route\n   * @param route route of the exact in trade\n   * @param amountIn the amount being passed in\n   */\n  public static exactIn(route: Route, amountIn: CurrencyAmount, chainId: ChainId): Trade {\n    return new Trade(route, amountIn, TradeType.EXACT_INPUT, chainId)\n  }\n\n  /**\n   * Constructs an exact out trade with the given amount out and route\n   * @param route route of the exact out trade\n   * @param amountOut the amount returned by the trade\n   */\n  public static exactOut(route: Route, amountOut: CurrencyAmount, chainId: ChainId): Trade {\n    return new Trade(route, amountOut, TradeType.EXACT_OUTPUT, chainId)\n  }\n\n  public constructor(route: Route, amount: CurrencyAmount, tradeType: TradeType, chainId: ChainId) {\n    const amounts: TokenAmount[] = new Array(route.path.length)\n    const nextPairs: Pair[] = new Array(route.pairs.length)\n    if (tradeType === TradeType.EXACT_INPUT) {\n      invariant(currencyEquals(amount.currency, route.input), 'INPUT')\n      amounts[0] = wrappedAmount(amount, route.chainId)\n      for (let i = 0; i < route.path.length - 1; i++) {\n        const pair = route.pairs[i]\n        const [outputAmount, nextPair] = pair.getOutputAmount(amounts[i], chainId)\n        amounts[i + 1] = outputAmount\n        nextPairs[i] = nextPair\n      }\n    } else {\n      invariant(currencyEquals(amount.currency, route.output), 'OUTPUT')\n      amounts[amounts.length - 1] = wrappedAmount(amount, route.chainId)\n      for (let i = route.path.length - 1; i > 0; i--) {\n        const pair = route.pairs[i - 1]\n        const [inputAmount, nextPair] = pair.getInputAmount(amounts[i], chainId)\n        amounts[i - 1] = inputAmount\n        nextPairs[i - 1] = nextPair\n      }\n    }\n\n    this.route = route\n    this.tradeType = tradeType\n    this.inputAmount =\n      tradeType === TradeType.EXACT_INPUT\n        ? amount\n        : route.input === CAVAX\n        ? CurrencyAmount.ether(amounts[0].raw)\n        : amounts[0]\n    this.outputAmount =\n      tradeType === TradeType.EXACT_OUTPUT\n        ? amount\n        : route.output === CAVAX\n        ? CurrencyAmount.ether(amounts[amounts.length - 1].raw)\n        : amounts[amounts.length - 1]\n    this.executionPrice = new Price(\n      this.inputAmount.currency,\n      this.outputAmount.currency,\n      this.inputAmount.raw,\n      this.outputAmount.raw\n    )\n    this.nextMidPrice = Price.fromRoute(new Route(nextPairs, route.input))\n    this.priceImpact = computePriceImpact(route.midPrice, this.inputAmount, this.outputAmount)\n    this.chainId = chainId\n  }\n\n  /**\n   * Get the minimum amount that must be received from this trade for the given slippage tolerance\n   * @param slippageTolerance tolerance of unfavorable slippage from the execution price of this trade\n   */\n  public minimumAmountOut(slippageTolerance: Percent): CurrencyAmount {\n    invariant(!slippageTolerance.lessThan(ZERO), 'SLIPPAGE_TOLERANCE')\n    if (this.tradeType === TradeType.EXACT_OUTPUT) {\n      return this.outputAmount\n    } else {\n      const slippageAdjustedAmountOut = new Fraction(ONE)\n        .add(slippageTolerance)\n        .invert()\n        .multiply(this.outputAmount.raw).quotient\n      return this.outputAmount instanceof TokenAmount\n        ? new TokenAmount(this.outputAmount.token, slippageAdjustedAmountOut)\n        : CurrencyAmount.ether(slippageAdjustedAmountOut)\n    }\n  }\n\n  /**\n   * Get the maximum amount in that can be spent via this trade for the given slippage tolerance\n   * @param slippageTolerance tolerance of unfavorable slippage from the execution price of this trade\n   */\n  public maximumAmountIn(slippageTolerance: Percent): CurrencyAmount {\n    invariant(!slippageTolerance.lessThan(ZERO), 'SLIPPAGE_TOLERANCE')\n    if (this.tradeType === TradeType.EXACT_INPUT) {\n      return this.inputAmount\n    } else {\n      const slippageAdjustedAmountIn = new Fraction(ONE).add(slippageTolerance).multiply(this.inputAmount.raw).quotient\n      return this.inputAmount instanceof TokenAmount\n        ? new TokenAmount(this.inputAmount.token, slippageAdjustedAmountIn)\n        : CurrencyAmount.ether(slippageAdjustedAmountIn)\n    }\n  }\n\n  /**\n   * Given a list of pairs, and a fixed amount in, returns the top `maxNumResults` trades that go from an input token\n   * amount to an output token, making at most `maxHops` hops.\n   * Note this does not consider aggregation, as routes are linear. It's possible a better route exists by splitting\n   * the amount in among multiple routes.\n   * @param pairs the pairs to consider in finding the best trade\n   * @param currencyAmountIn exact amount of input currency to spend\n   * @param currencyOut the desired currency out\n   * @param maxNumResults maximum number of results to return\n   * @param maxHops maximum number of hops a returned trade can make, e.g. 1 hop goes through a single pair\n   * @param currentPairs used in recursion; the current list of pairs\n   * @param originalAmountIn used in recursion; the original value of the currencyAmountIn parameter\n   * @param bestTrades used in recursion; the current list of best trades\n   */\n  public static bestTradeExactIn(\n    pairs: Pair[],\n    currencyAmountIn: CurrencyAmount,\n    currencyOut: Currency,\n    { maxNumResults = 3, maxHops = 3 }: BestTradeOptions = {},\n    // used in recursion.\n    currentPairs: Pair[] = [],\n    originalAmountIn: CurrencyAmount = currencyAmountIn,\n    bestTrades: Trade[] = []\n  ): Trade[] {\n    invariant(pairs.length > 0, 'PAIRS')\n    invariant(maxHops > 0, 'MAX_HOPS')\n    invariant(originalAmountIn === currencyAmountIn || currentPairs.length > 0, 'INVALID_RECURSION')\n    const chainId: ChainId | undefined =\n      currencyAmountIn instanceof TokenAmount\n        ? currencyAmountIn.token.chainId\n        : currencyOut instanceof Token\n        ? currencyOut.chainId\n        : undefined\n    invariant(chainId !== undefined, 'CHAIN_ID')\n\n    const amountIn = wrappedAmount(currencyAmountIn, chainId)\n    const tokenOut = wrappedCurrency(currencyOut, chainId)\n    for (let i = 0; i < pairs.length; i++) {\n      const pair = pairs[i]\n      // pair irrelevant\n      if (!pair.token0.equals(amountIn.token) && !pair.token1.equals(amountIn.token)) continue\n      if (pair.reserve0.equalTo(ZERO) || pair.reserve1.equalTo(ZERO)) continue\n\n      let amountOut: TokenAmount\n      try {\n        ;[amountOut] = pair.getOutputAmount(amountIn, chainId)\n      } catch (error) {\n        // input too low\n        // @ts-ignore\n        if (error.isInsufficientInputAmountError) {\n          continue\n        }\n        throw error\n      }\n      // we have arrived at the output token, so this is the final trade of one of the paths\n      if (amountOut.token.equals(tokenOut)) {\n        sortedInsert(\n          bestTrades,\n          new Trade(\n            new Route([...currentPairs, pair], originalAmountIn.currency, currencyOut),\n            originalAmountIn,\n            TradeType.EXACT_INPUT,\n            chainId\n          ),\n          maxNumResults,\n          tradeComparator\n        )\n      } else if (maxHops > 1 && pairs.length > 1) {\n        const pairsExcludingThisPair = pairs.slice(0, i).concat(pairs.slice(i + 1, pairs.length))\n\n        // otherwise, consider all the other paths that lead from this token as long as we have not exceeded maxHops\n        Trade.bestTradeExactIn(\n          pairsExcludingThisPair,\n          amountOut,\n          currencyOut,\n          {\n            maxNumResults,\n            maxHops: maxHops - 1\n          },\n          [...currentPairs, pair],\n          originalAmountIn,\n          bestTrades\n        )\n      }\n    }\n\n    return bestTrades\n  }\n\n  /**\n   * similar to the above method but instead targets a fixed output amount\n   * given a list of pairs, and a fixed amount out, returns the top `maxNumResults` trades that go from an input token\n   * to an output token amount, making at most `maxHops` hops\n   * note this does not consider aggregation, as routes are linear. it's possible a better route exists by splitting\n   * the amount in among multiple routes.\n   * @param pairs the pairs to consider in finding the best trade\n   * @param currencyIn the currency to spend\n   * @param currencyAmountOut the exact amount of currency out\n   * @param maxNumResults maximum number of results to return\n   * @param maxHops maximum number of hops a returned trade can make, e.g. 1 hop goes through a single pair\n   * @param currentPairs used in recursion; the current list of pairs\n   * @param originalAmountOut used in recursion; the original value of the currencyAmountOut parameter\n   * @param bestTrades used in recursion; the current list of best trades\n   */\n  public static bestTradeExactOut(\n    pairs: Pair[],\n    currencyIn: Currency,\n    currencyAmountOut: CurrencyAmount,\n    { maxNumResults = 3, maxHops = 3 }: BestTradeOptions = {},\n    // used in recursion.\n    currentPairs: Pair[] = [],\n    originalAmountOut: CurrencyAmount = currencyAmountOut,\n    bestTrades: Trade[] = []\n  ): Trade[] {\n    invariant(pairs.length > 0, 'PAIRS')\n    invariant(maxHops > 0, 'MAX_HOPS')\n    invariant(originalAmountOut === currencyAmountOut || currentPairs.length > 0, 'INVALID_RECURSION')\n    const chainId: ChainId | undefined =\n      currencyAmountOut instanceof TokenAmount\n        ? currencyAmountOut.token.chainId\n        : currencyIn instanceof Token\n        ? currencyIn.chainId\n        : undefined\n    invariant(chainId !== undefined, 'CHAIN_ID')\n\n    const amountOut = wrappedAmount(currencyAmountOut, chainId)\n    const tokenIn = wrappedCurrency(currencyIn, chainId)\n    for (let i = 0; i < pairs.length; i++) {\n      const pair = pairs[i]\n      // pair irrelevant\n      if (!pair.token0.equals(amountOut.token) && !pair.token1.equals(amountOut.token)) continue\n      if (pair.reserve0.equalTo(ZERO) || pair.reserve1.equalTo(ZERO)) continue\n\n      let amountIn: TokenAmount\n      try {\n        ;[amountIn] = pair.getInputAmount(amountOut, chainId)\n      } catch (error) {\n        // not enough liquidity in this pair\n        // @ts-ignore\n        if (error.isInsufficientReservesError) {\n          continue\n        }\n        throw error\n      }\n      // we have arrived at the input token, so this is the first trade of one of the paths\n      if (amountIn.token.equals(tokenIn)) {\n        sortedInsert(\n          bestTrades,\n          new Trade(\n            new Route([pair, ...currentPairs], currencyIn, originalAmountOut.currency),\n            originalAmountOut,\n            TradeType.EXACT_OUTPUT,\n            chainId\n          ),\n          maxNumResults,\n          tradeComparator\n        )\n      } else if (maxHops > 1 && pairs.length > 1) {\n        const pairsExcludingThisPair = pairs.slice(0, i).concat(pairs.slice(i + 1, pairs.length))\n\n        // otherwise, consider all the other paths that arrive at this token as long as we have not exceeded maxHops\n        Trade.bestTradeExactOut(\n          pairsExcludingThisPair,\n          currencyIn,\n          amountIn,\n          {\n            maxNumResults,\n            maxHops: maxHops - 1\n          },\n          [pair, ...currentPairs],\n          originalAmountOut,\n          bestTrades\n        )\n      }\n    }\n\n    return bestTrades\n  }\n}\n","import { TradeType } from './constants'\nimport invariant from 'tiny-invariant'\nimport { validateAndParseAddress } from './utils'\nimport { CurrencyAmount, CAVAX, Percent, Trade } from './entities'\n\n/**\n * Options for producing the arguments to send call to the router.\n */\nexport interface TradeOptions {\n  /**\n   * How much the execution price is allowed to move unfavorably from the trade execution price.\n   */\n  allowedSlippage: Percent\n  /**\n   * How long the swap is valid until it expires, in seconds.\n   * This will be used to produce a `deadline` parameter which is computed from when the swap call parameters\n   * are generated.\n   */\n  ttl: number\n  /**\n   * The account that should receive the output of the swap.\n   */\n  recipient: string\n\n  /**\n   * Whether any of the tokens in the path are fee on transfer tokens, which should be handled with special methods\n   */\n  feeOnTransfer?: boolean\n}\n\nexport interface TradeOptionsDeadline extends Omit<TradeOptions, 'ttl'> {\n  /**\n   * When the transaction expires.\n   * This is an atlernate to specifying the ttl, for when you do not want to use local time.\n   */\n  deadline: number\n}\n\n/**\n * The parameters to use in the call to the Uniswap V2 Router to execute a trade.\n */\nexport interface SwapParameters {\n  /**\n   * The method to call on the Uniswap V2 Router.\n   */\n  methodName: string\n  /**\n   * The arguments to pass to the method, all hex encoded.\n   */\n  args: (string | string[])[]\n  /**\n   * The amount of wei to send in hex.\n   */\n  value: string\n}\n\nfunction toHex(currencyAmount: CurrencyAmount) {\n  return `0x${currencyAmount.raw.toString(16)}`\n}\n\nconst ZERO_HEX = '0x0'\n\n/**\n * Represents the Uniswap V2 Router, and has static methods for helping execute trades.\n */\nexport abstract class Router {\n  /**\n   * Cannot be constructed.\n   */\n  private constructor() {}\n  /**\n   * Produces the on-chain method name to call and the hex encoded parameters to pass as arguments for a given trade.\n   * @param trade to produce call parameters for\n   * @param options options for the call parameters\n   */\n  public static swapCallParameters(trade: Trade, options: TradeOptions | TradeOptionsDeadline): SwapParameters {\n    const etherIn = trade.inputAmount.currency === CAVAX\n    const etherOut = trade.outputAmount.currency === CAVAX\n    // the router does not support both ether in and out\n    invariant(!(etherIn && etherOut), 'ETHER_IN_OUT')\n    invariant(!('ttl' in options) || options.ttl > 0, 'TTL')\n\n    const to: string = validateAndParseAddress(options.recipient)\n    const amountIn: string = toHex(trade.maximumAmountIn(options.allowedSlippage))\n    const amountOut: string = toHex(trade.minimumAmountOut(options.allowedSlippage))\n    const path: string[] = trade.route.path.map(token => token.address)\n    const deadline =\n      'ttl' in options\n        ? `0x${(Math.floor(new Date().getTime() / 1000) + options.ttl).toString(16)}`\n        : `0x${options.deadline.toString(16)}`\n\n    const useFeeOnTransfer = Boolean(options.feeOnTransfer)\n\n    let methodName: string\n    let args: (string | string[])[]\n    let value: string\n    switch (trade.tradeType) {\n      case TradeType.EXACT_INPUT:\n        if (etherIn) {\n          methodName = useFeeOnTransfer ? 'swapExactAVAXForTokensSupportingFeeOnTransferTokens' : 'swapExactAVAXForTokens'\n          // (uint amountOutMin, address[] calldata path, address to, uint deadline)\n          args = [amountOut, path, to, deadline]\n          value = amountIn\n        } else if (etherOut) {\n          methodName = useFeeOnTransfer ? 'swapExactTokensForAVAXSupportingFeeOnTransferTokens' : 'swapExactTokensForAVAX'\n          // (uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n          args = [amountIn, amountOut, path, to, deadline]\n          value = ZERO_HEX\n        } else {\n          methodName = useFeeOnTransfer\n            ? 'swapExactTokensForTokensSupportingFeeOnTransferTokens'\n            : 'swapExactTokensForTokens'\n          // (uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n          args = [amountIn, amountOut, path, to, deadline]\n          value = ZERO_HEX\n        }\n        break\n      case TradeType.EXACT_OUTPUT:\n        invariant(!useFeeOnTransfer, 'EXACT_OUT_FOT')\n        if (etherIn) {\n          methodName = 'swapAVAXForExactTokens'\n          // (uint amountOut, address[] calldata path, address to, uint deadline)\n          args = [amountOut, path, to, deadline]\n          value = amountIn\n        } else if (etherOut) {\n          methodName = 'swapTokensForExactAVAX'\n          // (uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n          args = [amountOut, amountIn, path, to, deadline]\n          value = ZERO_HEX\n        } else {\n          methodName = 'swapTokensForExactTokens'\n          // (uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n          args = [amountOut, amountIn, path, to, deadline]\n          value = ZERO_HEX\n        }\n        break\n    }\n    return {\n      methodName,\n      args,\n      value\n    }\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { getNetwork } from '@ethersproject/networks'\nimport { getDefaultProvider } from '@ethersproject/providers'\nimport { TokenAmount } from './entities/fractions/tokenAmount'\nimport { Pair } from './entities/pair'\nimport invariant from 'tiny-invariant'\nimport ERC20 from './abis/ERC20.json'\nimport IJoePair from './abis/JoePair.json'\nimport { ChainId } from './constants'\nimport { Token } from './entities/token'\n\nlet TOKEN_DECIMALS_CACHE: { [chainId: number]: { [address: string]: number } } = {}\n\n/**\n * Contains methods for constructing instances of pairs and tokens from on-chain data.\n */\nexport abstract class Fetcher {\n  /**\n   * Cannot be constructed.\n   */\n  private constructor() {}\n\n  /**\n   * Fetch information for a given token on the given chain, using the given ethers provider.\n   * @param chainId chain of the token\n   * @param address address of the token on the chain\n   * @param provider provider used to fetch the token\n   * @param symbol optional symbol of the token\n   * @param name optional name of the token\n   */\n  public static async fetchTokenData(\n    chainId: ChainId,\n    address: string,\n    provider = getDefaultProvider(getNetwork(chainId)),\n    symbol?: string,\n    name?: string\n  ): Promise<Token> {\n    const parsedDecimals =\n      typeof TOKEN_DECIMALS_CACHE?.[chainId]?.[address] === 'number'\n        ? TOKEN_DECIMALS_CACHE[chainId][address]\n        : await new Contract(address, ERC20, provider).decimals().then((decimals: number): number => {\n            TOKEN_DECIMALS_CACHE = {\n              ...TOKEN_DECIMALS_CACHE,\n              [chainId]: {\n                ...TOKEN_DECIMALS_CACHE?.[chainId],\n                [address]: decimals\n              }\n            }\n            return decimals\n          })\n    return new Token(chainId, address, parsedDecimals, symbol, name)\n  }\n\n  /**\n   * Fetches information about a pair and constructs a pair from the given two tokens.\n   * @param tokenA first token\n   * @param tokenB second token\n   * @param provider the provider to use to fetch the data\n   */\n  public static async fetchPairData(\n    tokenA: Token,\n    tokenB: Token,\n    provider = getDefaultProvider(getNetwork(tokenA.chainId))\n  ): Promise<Pair> {\n    invariant(tokenA.chainId === tokenB.chainId, 'CHAIN_ID')\n    const address = Pair.getAddress(tokenA, tokenB, tokenA.chainId)\n    const [reserves0, reserves1] = await new Contract(address, IJoePair.abi, provider).getReserves()\n    const balances = tokenA.sortsBefore(tokenB) ? [reserves0, reserves1] : [reserves1, reserves0]\n    return new Pair(new TokenAmount(tokenA, balances[0]), new TokenAmount(tokenB, balances[1]), tokenA.chainId)\n  }\n}\n","import { ChainId } from './constants'\n\nconst ZERO_ADDRESS = '0x0000000000000000000000000000000000000000'\n\nexport const BLOCKS_SUBGRAPH: {[chainId in ChainId]: string } = {\n    [ChainId.RINKEBY]: 'https://api.thegraph.com/subgraphs/name/blocklytics/ethereum-blocks', \n    [ChainId.FUJI]: ZERO_ADDRESS,\n    [ChainId.AVALANCHE]: 'https://thegraph.com/explorer/subgraph/dasconnor/avalanche-blocks'\n}\n\nexport const EXCHANGE_SUBGRAPH: {[chainId in ChainId]: string } = {\n    [ChainId.RINKEBY]: 'https://api.thegraph.com/subgraphs/name/traderjoe-xyz/exchange-rinkeby-ii', \n    [ChainId.FUJI]: ZERO_ADDRESS,\n    [ChainId.AVALANCHE]: 'https://api.thegraph.com/subgraphs/name/traderjoe-xyz/exchange'\n}\n\nexport const MASTERCHEF_SUBGRAPH: {[chainId in ChainId]: string } = {\n    [ChainId.RINKEBY]: 'https://api.thegraph.com/subgraphs/name/traderjoe-xyz/masterchefv2-rinkeby', \n    [ChainId.FUJI]: ZERO_ADDRESS,\n    [ChainId.AVALANCHE]: 'https://api.thegraph.com/subgraphs/name/traderjoe-xyz/masterchefv2'\n}\n\nexport const DEXCANDLES_SUBGRAPH: {[chainId in ChainId]: string } = {\n    [ChainId.RINKEBY]: 'https://api.thegraph.com/subgraphs/name/traderjoe-xyz/dexcandles-rinkeby-ii', \n    [ChainId.FUJI]: ZERO_ADDRESS,\n    [ChainId.AVALANCHE]: 'https://api.thegraph.com/subgraphs/name/traderjoe-xyz/dexcandles'\n}\n\nexport const BAR_SUBGRAPH: {[chainId in ChainId]: string } = {\n    [ChainId.RINKEBY]: 'https://api.thegraph.com/subgraphs/name/traderjoe-xyz/bar-rinkeby-ii', \n    [ChainId.FUJI]: ZERO_ADDRESS,\n    [ChainId.AVALANCHE]: 'https://api.thegraph.com/subgraphs/name/traderjoe-xyz/bar'\n}\n\nexport const LENDING_SUBGRAPH: {[chainId in ChainId]: string } = {\n    [ChainId.RINKEBY]: 'https://api.thegraph.com/subgraphs/name/traderjoe-xyz/lending-rinkeby', \n    [ChainId.FUJI]: ZERO_ADDRESS,\n    [ChainId.AVALANCHE]: 'https://api.thegraph.com/subgraphs/name/traderjoe-xyz/lending'\n}"],"names":["ZERO","JSBI","BigInt","ONE","TWO","THREE","FIVE","TEN","_100","_997","_1000","ChainId","TradeType","Rounding","FACTORY_ADDRESS","RINKEBY","FUJI","AVALANCHE","JOE_ADDRESS","MASTERCHEF_ADDRESS","MASTERCHEF_V3_ADDRESS","BAR_ADDRESS","ZAP_ADDRESS","ROUTER_ADDRESS","MAKER_ADDRESS","ROLL_ADDRESS","BORINGHELPER_ADDRESS","BORINGHELPER_MCV3_ADDRESS","BORINGTOKENSCANNER_ADDRESS","BORINGDASHBOARD_ADDRESS","INIT_CODE_HASH","MINIMUM_LIQUIDITY","SolidityType","SOLIDITY_TYPE_MAXIMA","uint8","uint256","UNITROLLER_ADDRESS","JOELENS_ADDRESS","JOELENSVIEW_ADDRESS","FARMLENS_ADDRESS","JAVAX_ADDRESS","MAXIMILLION_ADDRESS","CAN_SET_PROTOTYPE","Object","InsufficientReservesError","name","constructor","setPrototypeOf","prototype","Error","InsufficientInputAmountError","validateSolidityTypeInstance","value","solidityType","greaterThanOrEqual","invariant","lessThanOrEqual","validateAndParseAddress","address","checksummedAddress","getAddress","warning","error","parseBigintIsh","bigintIsh","toString","sqrt","y","z","x","greaterThan","add","divide","lessThan","notEqual","sortedInsert","items","maxSize","comparator","length","push","isFull","lo","hi","mid","splice","pop","Currency","decimals","symbol","CAVAX","Token","chainId","equals","other","sortsBefore","toLowerCase","currencyEquals","currencyA","currencyB","WAVAX","Decimal","toFormat","_Decimal","Big","_Big","toSignificantRounding","ROUND_DOWN","ROUND_HALF_UP","ROUND_UP","toFixedRounding","Fraction","numerator","denominator","invert","otherParsed","equal","multiply","subtract","equalTo","toSignificant","significantDigits","format","rounding","groupSeparator","Number","isInteger","set","precision","quotient","div","toSignificantDigits","decimalPlaces","toFixed","DP","RM","remainder","CurrencyAmount","currency","amount","parsedAmount","exponentiate","ether","raw","toExact","TokenAmount","token","Price","baseCurrency","quoteCurrency","scalar","fromRoute","route","prices","pairs","entries","i","pair","path","token0","reserve0","reserve1","slice","reduce","accumulator","currentValue","fraction","quote","currencyAmount","adjusted","PAIR_ADDRESS_CACHE","Pair","tokenAmountA","tokenAmountB","tokenAmounts","liquidityToken","tokenA","tokenB","tokens","undefined","getCreate2Address","keccak256","pack","involvesToken","token1","priceOf","token0Price","token1Price","reserveOf","getOutputAmount","inputAmount","inputReserve","outputReserve","inputAmountWithFee","outputAmount","getInputAmount","getLiquidityMinted","totalSupply","liquidity","amount0","amount1","getLiquidityValue","feeOn","kLast","totalSupplyAdjusted","kLastParsed","rootK","rootKLast","feeLiquidity","Route","input","output","every","currentInput","midPrice","_100_PERCENT","Percent","computePriceImpact","exactQuote","slippage","inputOutputComparator","a","b","tradeComparator","ioComp","priceImpact","wrappedAmount","wrappedCurrency","Trade","tradeType","amounts","Array","nextPairs","EXACT_INPUT","nextPair","EXACT_OUTPUT","executionPrice","nextMidPrice","exactIn","amountIn","exactOut","amountOut","minimumAmountOut","slippageTolerance","slippageAdjustedAmountOut","maximumAmountIn","slippageAdjustedAmountIn","bestTradeExactIn","currencyAmountIn","currencyOut","currentPairs","originalAmountIn","bestTrades","maxNumResults","maxHops","tokenOut","isInsufficientInputAmountError","pairsExcludingThisPair","concat","bestTradeExactOut","currencyIn","currencyAmountOut","originalAmountOut","tokenIn","isInsufficientReservesError","toHex","ZERO_HEX","Router","swapCallParameters","trade","options","etherIn","etherOut","ttl","to","recipient","allowedSlippage","map","deadline","Math","floor","Date","getTime","useFeeOnTransfer","Boolean","feeOnTransfer","methodName","args","TOKEN_DECIMALS_CACHE","Fetcher","fetchTokenData","provider","getDefaultProvider","getNetwork","Contract","ERC20","then","parsedDecimals","fetchPairData","IJoePair","abi","getReserves","reserves0","reserves1","balances","ZERO_ADDRESS","BLOCKS_SUBGRAPH","EXCHANGE_SUBGRAPH","MASTERCHEF_SUBGRAPH","DEXCANDLES_SUBGRAPH","BAR_SUBGRAPH","LENDING_SUBGRAPH"],"mappings":"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"}